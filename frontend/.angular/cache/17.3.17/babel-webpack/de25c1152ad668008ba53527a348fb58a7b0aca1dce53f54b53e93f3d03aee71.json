{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/department.service\";\nimport * as i4 from \"../_services/alert.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction DepartmentAddEditComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepartmentAddEditComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, DepartmentAddEditComponent_div_11_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nexport let DepartmentAddEditComponent = /*#__PURE__*/(() => {\n  class DepartmentAddEditComponent {\n    formBuilder;\n    route;\n    router;\n    departmentService;\n    alertService;\n    form;\n    id;\n    isAddMode;\n    constructor(formBuilder, route, router, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['']\n      });\n      if (!this.isAddMode) {\n        this.departmentService.getById(this.id).subscribe(dept => this.form.patchValue(dept));\n      }\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      if (this.form.invalid) return;\n      if (this.isAddMode) {\n        this.createDepartment();\n      } else {\n        this.updateDepartment();\n      }\n    }\n    createDepartment() {\n      this.departmentService.create(this.form.value).subscribe({\n        next: () => {\n          this.alertService.success('Department created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/departments']);\n        },\n        error: error => this.alertService.error(error)\n      });\n    }\n    updateDepartment() {\n      this.departmentService.update(this.id, this.form.value).subscribe({\n        next: () => {\n          this.alertService.success('Department updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/departments']);\n        },\n        error: error => this.alertService.error(error)\n      });\n    }\n    static ɵfac = function DepartmentAddEditComponent_Factory(t) {\n      return new (t || DepartmentAddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i4.AlertService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DepartmentAddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 21,\n      vars: 7,\n      consts: [[1, \"p-4\"], [1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"description\", 1, \"form-control\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-1\", 3, \"disabled\"], [\"routerLink\", \"/departments\", 1, \"btn\", \"btn-secondary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n      template: function DepartmentAddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function DepartmentAddEditComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\");\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, DepartmentAddEditComponent_div_11_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\");\n          i0.ɵɵtext(14, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"textarea\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"button\", 11);\n          i0.ɵɵtext(18, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"a\", 12);\n          i0.ɵɵtext(20, \"Cancel\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isAddMode ? \"Add Department\" : \"Edit Department\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.f.name.touched && ctx.f.name.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.f.name.touched && ctx.f.name.errors);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return DepartmentAddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}