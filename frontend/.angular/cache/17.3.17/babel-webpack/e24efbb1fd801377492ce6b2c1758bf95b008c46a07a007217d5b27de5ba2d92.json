{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport { Role } from './_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst adminModule = () => import('./admin/admin.module').then(x => x.AdminModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\nconst routes = [{\n  path: '',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'account',\n  loadChildren: accountModule\n}, {\n  path: 'profile',\n  loadChildren: profileModule,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin',\n  loadChildren: adminModule,\n  canActivate: [AuthGuard],\n  data: {\n    roles: [Role.Admin]\n  }\n}, {\n  path: 'employees',\n  loadChildren: () => import('./employees/employees.module').then(m => m.EmployeesModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'departments',\n  loadChildren: () => import('./departments/departments.module').then(m => m.DepartmentsModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'workflows',\n  loadChildren: () => import('./workflows/workflows.module').then(m => m.WorkflowsModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'requests',\n  loadChildren: () => import('./requests/requests.module').then(m => m.RequestsModule),\n  canActivate: [AuthGuard]\n},\n// otherwise redirect to home\n{\n  path: '**',\n  redirectTo: ''\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [{\n        provide: LocationStrategy,\n        useClass: HashLocationStrategy\n      }],\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}