{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./request.service\";\nimport * as i4 from \"../_services/employee.service\";\nimport * as i5 from \"../_services\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction RequestsFormComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r1);\n  }\n}\nfunction RequestsFormComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, RequestsFormComponent_div_12_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.type.errors.required);\n  }\n}\nfunction RequestsFormComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", employee_r3.user == null ? null : employee_r3.user.email, \" (\", employee_r3.id, \") \");\n  }\n}\nfunction RequestsFormComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, RequestsFormComponent_div_20_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.employeeId.errors.required);\n  }\n}\nfunction RequestsFormComponent_div_21_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(status_r4);\n  }\n}\nfunction RequestsFormComponent_div_21_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_21_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, RequestsFormComponent_div_21_div_6_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.status.errors.required);\n  }\n}\nfunction RequestsFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 5);\n    i0.ɵɵtext(2, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"select\", 21);\n    i0.ɵɵtemplate(5, RequestsFormComponent_div_21_option_5_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, RequestsFormComponent_div_21_div_6_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r1.submitted && ctx_r1.f.status.errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.statusOptions);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && ctx_r1.f.status.errors);\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, RequestsFormComponent_div_22_tr_13_div_3_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const itemForm_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", itemForm_r7.get(\"name\").errors.required);\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, RequestsFormComponent_div_22_tr_13_div_6_div_1_Template, 2, 0, \"div\", 20)(2, RequestsFormComponent_div_22_tr_13_div_6_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const itemForm_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", itemForm_r7.get(\"quantity\").errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", itemForm_r7.get(\"quantity\").errors.min);\n  }\n}\nfunction RequestsFormComponent_div_22_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 31)(1, \"td\");\n    i0.ɵɵelement(2, \"input\", 32);\n    i0.ɵɵtemplate(3, RequestsFormComponent_div_22_tr_13_div_3_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 33);\n    i0.ɵɵtemplate(6, RequestsFormComponent_div_22_tr_13_div_6_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 34)(8, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function RequestsFormComponent_div_22_tr_13_Template_button_click_8_listener() {\n      const i_r8 = i0.ɵɵrestoreView(_r6).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.removeItem(i_r8));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const itemForm_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.submitted && itemForm_r7.get(\"name\").errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && itemForm_r7.get(\"name\").errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r1.submitted && itemForm_r7.get(\"quantity\").errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && itemForm_r7.get(\"quantity\").errors);\n  }\n}\nfunction RequestsFormComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"label\", 23);\n    i0.ɵɵtext(2, \"Items\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24)(4, \"table\", 25)(5, \"thead\")(6, \"tr\")(7, \"th\", 26);\n    i0.ɵɵtext(8, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 26);\n    i0.ɵɵtext(10, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"th\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"tbody\", 28);\n    i0.ɵɵtemplate(13, RequestsFormComponent_div_22_tr_13_Template, 10, 9, \"tr\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 30)(15, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function RequestsFormComponent_div_22_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addItem());\n    });\n    i0.ɵɵtext(16, \"Add Item\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.itemsArray.controls);\n  }\n}\nfunction RequestsFormComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 36);\n  }\n}\nexport let RequestsFormComponent = /*#__PURE__*/(() => {\n  class RequestsFormComponent {\n    formBuilder;\n    route;\n    router;\n    requestService;\n    employeeService;\n    alertService;\n    form;\n    id;\n    isAddMode;\n    loading = false;\n    submitted = false;\n    employees = [];\n    requestTypes = ['Equipment', 'Resources', 'Leave']; // Removed Training and Other\n    statusOptions = ['Pending', 'Approved', 'Rejected'];\n    // Types that require items\n    itemRequiredTypes = ['Equipment', 'Resources'];\n    constructor(formBuilder, route, router, requestService, employeeService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load all employees\n      this.employeeService.getAll().pipe(first()).subscribe({\n        next: employees => this.employees = employees,\n        error: error => this.alertService.error(error)\n      });\n      // form with validation rules\n      this.form = this.formBuilder.group({\n        type: ['', Validators.required],\n        employeeId: ['', Validators.required],\n        status: [{\n          value: 'Pending',\n          disabled: this.isAddMode\n        }, Validators.required],\n        items: this.formBuilder.array([])\n      });\n      // Add type change listener to clear/reset items when type changes\n      this.form.get('type')?.valueChanges.subscribe(type => {\n        // Clear items array when type doesn't require items\n        if (!this.itemRequiredTypes.includes(type)) {\n          this.itemsArray.clear();\n        }\n      });\n      if (!this.isAddMode) {\n        // Load request data in edit mode\n        this.loading = true;\n        this.requestService.getById(parseInt(this.id)).pipe(first()).subscribe({\n          next: request => {\n            this.form.patchValue({\n              type: request.type,\n              employeeId: request.employeeId,\n              status: request.status\n            });\n            // Clear items array and populate with request items if type requires items\n            this.itemsArray.clear();\n            if (this.itemRequiredTypes.includes(request.type) && request.items) {\n              request.items.forEach(item => {\n                this.itemsArray.push(this.formBuilder.group({\n                  name: [item.name, Validators.required],\n                  quantity: [item.quantity, [Validators.required, Validators.min(1)]]\n                }));\n              });\n            }\n            this.loading = false;\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      }\n    }\n    // Helper method to check if items section should be shown\n    showItemsSection() {\n      const type = this.form.get('type')?.value;\n      return this.itemRequiredTypes.includes(type);\n    }\n    // Getter for easy access to form controls\n    get f() {\n      return this.form.controls;\n    }\n    // Getter for items FormArray\n    get itemsArray() {\n      return this.form.get('items');\n    }\n    addItem() {\n      const itemForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        quantity: [1, [Validators.required, Validators.min(1)]]\n      });\n      this.itemsArray.push(itemForm);\n    }\n    removeItem(index) {\n      this.itemsArray.removeAt(index);\n    }\n    onSubmit() {\n      this.submitted = true;\n      // Reset alerts on submit\n      this.alertService.clear();\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      // Get current type\n      const type = this.form.get('type')?.value;\n      // Require at least one item if type requires items\n      if (this.itemRequiredTypes.includes(type) && this.itemsArray.length === 0) {\n        this.alertService.error(`Please add at least one item to the ${type.toLowerCase()} request`);\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createRequest();\n      } else {\n        this.updateRequest();\n      }\n    }\n    onCancel() {\n      if (this.isAddMode) {\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      } else {\n        this.router.navigate(['../../'], {\n          relativeTo: this.route\n        });\n      }\n    }\n    createRequest() {\n      this.requestService.create(this.form.getRawValue()).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest() {\n      this.requestService.update(parseInt(this.id), this.form.getRawValue()).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static ɵfac = function RequestsFormComponent_Factory(t) {\n      return new (t || RequestsFormComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.AlertService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RequestsFormComponent,\n      selectors: [[\"app-requests-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 29,\n      vars: 16,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\", \"row\"], [1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"employeeId\", 1, \"form-select\", 3, \"ngClass\"], [\"class\", \"mb-3 row\", 4, \"ngIf\"], [\"class\", \"mb-4\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"formControlName\", \"status\", 1, \"form-select\", 3, \"ngClass\"], [1, \"mb-4\"], [1, \"col-form-label\"], [1, \"table-responsive\"], [1, \"table\", \"table-borderless\"], [2, \"width\", \"45%\"], [2, \"width\", \"10%\"], [\"formArrayName\", \"items\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-start\", \"mb-3\"], [3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"quantity\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function RequestsFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function RequestsFormComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"select\", 7);\n          i0.ɵɵelement(10, \"option\", 8);\n          i0.ɵɵtemplate(11, RequestsFormComponent_option_11_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, RequestsFormComponent_div_12_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 5);\n          i0.ɵɵtext(15, \"Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 6)(17, \"select\", 11);\n          i0.ɵɵelement(18, \"option\", 8);\n          i0.ɵɵtemplate(19, RequestsFormComponent_option_19_Template, 2, 3, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(20, RequestsFormComponent_div_20_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(21, RequestsFormComponent_div_21_Template, 7, 5, \"div\", 12)(22, RequestsFormComponent_div_22_Template, 17, 1, \"div\", 13);\n          i0.ɵɵelementStart(23, \"div\", 14)(24, \"button\", 15);\n          i0.ɵɵtemplate(25, RequestsFormComponent_span_25_Template, 1, 0, \"span\", 16);\n          i0.ɵɵtext(26, \" Save \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function RequestsFormComponent_Template_button_click_27_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(28, \"Cancel\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isAddMode ? \"ADD REQUEST\" : \"EDIT REQUEST\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f.type.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.requestTypes);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.employeeId.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showItemsSection());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [CommonModule, i6.NgClass, i6.NgForOf, i6.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, RouterModule],\n      encapsulation: 2\n    });\n  }\n  return RequestsFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}