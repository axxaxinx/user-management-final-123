{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./workflow.service\";\nimport * as i2 from \"./account.service\";\nexport let WorkflowTrackerService = /*#__PURE__*/(() => {\n  class WorkflowTrackerService {\n    workflowService;\n    accountService;\n    constructor(workflowService, accountService) {\n      this.workflowService = workflowService;\n      this.accountService = accountService;\n    }\n    /**\n     * Track department change in workflow\n     */\n    trackDepartmentChange(employeeId, oldDepartmentId, newDepartmentId, oldDeptName, newDeptName) {\n      const currentUser = this.accountService.accountValue;\n      const changedBy = currentUser ? currentUser.email : 'System';\n      const timestamp = new Date().toLocaleString();\n      // Use plain text format instead of JSON\n      const details = `Employee's department changed from ${oldDeptName} (ID: ${oldDepartmentId}) to ${newDeptName} (ID: ${newDepartmentId}) by ${changedBy} on ${timestamp}`;\n      const workflow = {\n        employeeId: employeeId,\n        type: 'DepartmentChange',\n        details: details\n      };\n      return this.workflowService.create(workflow);\n    }\n    /**\n     * Track request submission in workflow\n     */\n    trackRequestSubmission(employeeId, requestId, requestType) {\n      const currentUser = this.accountService.accountValue;\n      const createdBy = currentUser ? currentUser.email : 'System';\n      const timestamp = new Date().toLocaleString();\n      // Use plain text format\n      const details = `New ${requestType} request (ID: ${requestId}) created by ${createdBy} on ${timestamp}`;\n      const workflow = {\n        employeeId: employeeId,\n        type: 'RequestSubmission',\n        details: details\n      };\n      return this.workflowService.create(workflow);\n    }\n    /**\n     * Track request status update in workflow\n     */\n    trackRequestStatusChange(employeeId, requestId, oldStatus, newStatus, requestType) {\n      const currentUser = this.accountService.accountValue;\n      const changedBy = currentUser ? currentUser.email : 'System';\n      const timestamp = new Date().toLocaleString();\n      // Use plain text format\n      const details = `${requestType} request (ID: ${requestId}) status changed from ${oldStatus} to ${newStatus} by ${changedBy} on ${timestamp}`;\n      const workflow = {\n        employeeId: employeeId,\n        type: 'RequestStatusChange',\n        details: details\n      };\n      return this.workflowService.create(workflow);\n    }\n    static ɵfac = function WorkflowTrackerService_Factory(t) {\n      return new (t || WorkflowTrackerService)(i0.ɵɵinject(i1.WorkflowService), i0.ɵɵinject(i2.AccountService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WorkflowTrackerService,\n      factory: WorkflowTrackerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return WorkflowTrackerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}